{"version":3,"file":"5.47eed9206a0fbb613e4f.hot-update.js","sources":["webpack:///src/components/header.js"],"sourcesContent":["import Link from 'next/link'\r\nimport slugify from 'slugify'\r\n\r\nimport Social from './social'\r\nimport logo from '../../static/solplay-header-logo.svg'\r\nimport About from './about'\r\n\r\nclass Header extends React.Component {\r\n   state = { headerWhite: false, activeLink: 0, menuOpen: false }\r\n\r\n   componentDidMount() {\r\n      // this.handleScroll();\r\n      // window.addEventListener('scroll', this.handleScroll);\r\n      // this.handleResize();\r\n      // window.addEventListener('resize', this.handleResize);\r\n   }\r\n\r\n   handleScroll = () => {\r\n      const dom = document.scrollingElement\r\n      const headerWhite = Boolean(dom.scrollTop > 250)\r\n      //this.setState({ headerWhite });\r\n   }\r\n\r\n   handleMenu = () => {\r\n      const menuOpen = !this.state.menuOpen\r\n      this.setState({ menuOpen })\r\n   }\r\n\r\n   handleClick = (e, key, section) => {\r\n      e.preventDefault()\r\n      this.setState({ activeLink: key })\r\n      this.props.menuClick(section)\r\n      this.handleMenu()\r\n   }\r\n\r\n   render() {\r\n      const { menu, langs } = this.props\r\n      const headerClass = this.state.headerWhite ? ' white' : ''\r\n      const moblieClass = this.state.menuOpen\r\n         ? 'mobile-menu open'\r\n         : 'mobile-menu'\r\n      const navClass = this.state.menuOpen ? 'main-nav nav-open' : 'main-nav'\r\n\r\n      return (\r\n         <header className={`main-header${headerClass}`}>\r\n            <div className=\"header-container\">\r\n               <div className=\"lang-links\">\r\n                  {/* {langs.map((lang, key) => (\r\n                     <Link key={key} as={`/${lang}`} href={`/lang=${lang}`}>\r\n                        <a>{lang}</a>\r\n                     </Link>\r\n                  ))} */}\r\n               </div>\r\n               <Social className=\"header-social\" />\r\n               <h1 className=\"logo\">\r\n                  <Link href=\"/\" prefetch>\r\n                     <a>\r\n                        <img src={logo} alt=\"Solplay\" />\r\n                     </a>\r\n                  </Link>\r\n               </h1>\r\n               <nav className={navClass}>\r\n                  <ul className=\"menu\">\r\n                     {menu.map((item, key) => (\r\n                        <li className=\"nav-link\" key={key}>\r\n                           <a\r\n                              className={\r\n                                 this.state.activeLink == key ? 'active' : ''\r\n                              }\r\n                              href={slugify(item, { lower: true })}\r\n                              onClick={e =>\r\n                                 this.handleClick(\r\n                                    e,\r\n                                    key,\r\n                                    slugify(item, { lower: true })\r\n                                 )\r\n                              }\r\n                           >\r\n                              {item}\r\n                           </a>\r\n                        </li>\r\n                     ))}\r\n                  </ul>\r\n               </nav>\r\n               <div className={moblieClass} onClick={this.handleMenu}>\r\n                  <div className=\"menu-bar\" />\r\n                  <div className=\"menu-bar\" />\r\n                  <div className=\"menu-bar\" />\r\n               </div>\r\n            </div>\r\n         </header>\r\n      )\r\n   }\r\n}\r\n\r\nexport default Header\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/header.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;;;;;AASA;AACA;AACA;AAEA;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;;;;AAvBA;AAEA;AACA;AACA;AACA;;;AAoBA;AAAA;AACA;AADA;AAAA;AAAA;AAEA;AACA;AAGA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAAA;AAAA;AACA;AAAA;AAIA;AAAA;AAJA;AALA;AAAA;AAAA;AAAA;AAAA;AAFA;AAqBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AArFA;AACA;AAuFA;;;;A","sourceRoot":""}